<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>61.0</apiVersion>
    <decisions>
        <name>Does_this_Resource_belong_to_this_Territory</name>
        <label>Does this Resource belong to this Territory?</label>
        <locationX>176</locationX>
        <locationY>1106</locationY>
        <defaultConnector>
            <targetReference>Create_Territory_Member</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Territory_Memebrs.Id</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Benefit_with_Territory_and_Resource</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>This Flow will walk users through creating a new Benefit along with associating them to Work Types and Work Type Groups. This step validates that once Resources and Skills are assigned, the Scheduler automation will run correctly.</description>
    <dynamicChoiceSets>
        <name>AppointmentCategoryChoices</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <object>AppointmentCategory</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>BenefitStatus</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>BenefitStatus</picklistField>
        <picklistObject>Benefit</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>BenefitTYpeOptions</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <object>BenefitType</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>DefaultAppointmentTypeChoices</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>DefaultAppointmentType</picklistField>
        <picklistObject>WorkType</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>DurationTypeOptions</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>DurationType</picklistField>
        <picklistObject>WorkType</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>OpperatingHourseChoices</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <object>OperatingHours</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ProgramChoice</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Name</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <object>Program</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ServiceResource</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ServiceResource</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ServiceTerritory</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ServiceTerritory</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>ServiceTerritoryChoice</name>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>ServiceTerritory</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SkillsChoice</name>
        <dataType>String</dataType>
        <displayField>MasterLabel</displayField>
        <filterLogic>and</filterLogic>
        <filters>
            <field>MasterLabel</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <object>Skill</object>
        <valueField>Id</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>Accelerator: Benefit Scheduler - New Benefit and Work Type/Groups {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Accelerator: Benefit Scheduler - New Benefit and Work Type/Groups</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Add_Service_Territory</name>
        <label>Add Service Territory</label>
        <locationX>176</locationX>
        <locationY>890</locationY>
        <connector>
            <targetReference>Get_Territory_Memebrs</targetReference>
        </connector>
        <inputAssignments>
            <field>ServiceTerritoryId</field>
            <value>
                <elementReference>Select_a_Service_Territory</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkTypeId</field>
            <value>
                <elementReference>Create_Work_Type</elementReference>
            </value>
        </inputAssignments>
        <object>ServiceTerritoryWorkType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Benefit</name>
        <label>Create Benefit</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <connector>
            <targetReference>Create_Work_Type</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>BenefitStatus</field>
            <value>
                <elementReference>Benefit_Status</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>BenefitTypeId</field>
            <value>
                <elementReference>Benefit_Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <elementReference>Active</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>Benefit_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProgramId</field>
            <value>
                <elementReference>Program</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>StartDateTime</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <object>Benefit</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Territory_Member</name>
        <label>Create Territory Member</label>
        <locationX>264</locationX>
        <locationY>1214</locationY>
        <connector>
            <targetReference>Added_Territory_Member</targetReference>
        </connector>
        <inputAssignments>
            <field>EffectiveStartDate</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceResourceId</field>
            <value>
                <elementReference>Service_Resource</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ServiceTerritoryId</field>
            <value>
                <elementReference>Select_a_Service_Territory</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TerritoryType</field>
            <value>
                <stringValue>S</stringValue>
            </value>
        </inputAssignments>
        <object>ServiceTerritoryMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Work_Type</name>
        <label>Create Work Type</label>
        <locationX>176</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>Create_Work_Type_Group</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>AppointmentCategoryId</field>
            <value>
                <elementReference>Appointment_Category</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AttendeeLimit</field>
            <value>
                <elementReference>Attendee_Limit</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Benefit__c</field>
            <value>
                <elementReference>Create_Benefit</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DefaultAppointmentType</field>
            <value>
                <elementReference>Default_Appointment_Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>DurationType</field>
            <value>
                <elementReference>Duration_Type</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>EstimatedDuration</field>
            <value>
                <elementReference>Duration_of_Appointment</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>Benefit_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OperatingHoursId</field>
            <value>
                <elementReference>Operating_Hours</elementReference>
            </value>
        </inputAssignments>
        <object>WorkType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Work_Type_Group</name>
        <label>Create Work Type Group</label>
        <locationX>176</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>Create_Work_Type_Group_Member</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>GroupType</field>
            <value>
                <stringValue>Default</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <elementReference>Active</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>Benefit_Name</elementReference>
            </value>
        </inputAssignments>
        <object>WorkTypeGroup</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Work_Type_Group_Member</name>
        <label>Create Work Type Group Member</label>
        <locationX>176</locationX>
        <locationY>566</locationY>
        <connector>
            <targetReference>Add_Work_Type_to_Benefit_Record</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>WorkTypeGroupId</field>
            <value>
                <elementReference>Create_Work_Type_Group</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WorkTypeId</field>
            <value>
                <elementReference>Create_Work_Type</elementReference>
            </value>
        </inputAssignments>
        <object>WorkTypeGroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Territory_Memebrs</name>
        <label>Get Territory Memebrs</label>
        <locationX>176</locationX>
        <locationY>998</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_this_Resource_belong_to_this_Territory</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ServiceResourceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Service_Resource</elementReference>
            </value>
        </filters>
        <filters>
            <field>ServiceTerritoryId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Select_a_Service_Territory</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceTerritoryMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Add_Work_Type_to_Benefit_Record</name>
        <label>Add Work Type to Benefit Record</label>
        <locationX>176</locationX>
        <locationY>674</locationY>
        <connector>
            <targetReference>Add_Territories_and_Resource</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Create_Benefit</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Service_Territory__c</field>
            <value>
                <elementReference>Select_a_Service_Territory</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Work_Type__c</field>
            <value>
                <elementReference>Create_Work_Type</elementReference>
            </value>
        </inputAssignments>
        <object>Benefit</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Benefit_with_Territory_and_Resource</name>
        <label>Update Benefit with Territory and Resource</label>
        <locationX>176</locationX>
        <locationY>1514</locationY>
        <connector>
            <targetReference>Success_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Create_Benefit</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Service_Resource__c</field>
            <value>
                <elementReference>Service_Resource</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Service_Territory__c</field>
            <value>
                <elementReference>Select_a_Service_Territory</elementReference>
            </value>
        </inputAssignments>
        <object>Benefit</object>
    </recordUpdates>
    <screens>
        <name>Add_Territories_and_Resource</name>
        <label>Add Territories and Resource</label>
        <locationX>176</locationX>
        <locationY>782</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Add_Service_Territory</targetReference>
        </connector>
        <fields>
            <name>CreatedText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 16px;&quot;&gt;Assign Territory and Resource&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The Benefit, Work Types, and Work Type Groups have been created. The final step to allow for future scheduling is to connect these to a required Skills and Territory (location/office).&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Example: Intake Appointments&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Territory = San Fransisco Office&lt;/li&gt;&lt;li&gt;Service Resource = Dedicated staff member leading/owning future sessions&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Add_Territories_and_Resource_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Add_Territories_and_Resource_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Service_Resource</name>
                    <choiceReferences>ServiceResource</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Service Resource</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Add_Territories_and_Resource_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Select_a_Service_Territory</name>
                    <choiceReferences>ServiceTerritoryChoice</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Select a Service Territory/Location</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Added_Territory_Member</name>
        <label>Added Territory Member</label>
        <locationX>264</locationX>
        <locationY>1322</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Update_Benefit_with_Territory_and_Resource</targetReference>
        </connector>
        <fields>
            <name>AddedServiceTerritoryMember</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Added Service Territory Member&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;{!Service_Resource} was not a member of {!Select_a_Service_Territory}. They have been added. &lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please know this is defaulted to Secondary  Territory. Please update accordingly if this should be their primary location.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Create_New_Benefit</name>
        <label>Create New Benefit and Work Type/Group</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Create_Benefit</targetReference>
        </connector>
        <fields>
            <name>Notice</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 18px;&quot;&gt;Create Benefit and Work Types&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;This workflow will not only allow you to create a new Benefit, but will walk through the steps of enabling this Benefit to be added as a Work Type Group for Salesforce Scheduler. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;If you do not need this Benefit to be enabled for Scheduling, please use the standard New button. &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Create_New_Benefit_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Create_New_Benefit_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>BenefitDetails</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 20px;&quot;&gt;Benefit Details&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>Benefit_Name</name>
                    <dataType>String</dataType>
                    <fieldText>Benefit Name</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Benefit_Type</name>
                    <choiceReferences>BenefitTYpeOptions</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Benefit Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                </fields>
                <fields>
                    <name>Active</name>
                    <dataType>Boolean</dataType>
                    <defaultValue>
                        <booleanValue>true</booleanValue>
                    </defaultValue>
                    <fieldText>Active</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Benefit_Status</name>
                    <choiceReferences>BenefitStatus</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>Active</stringValue>
                    </defaultValue>
                    <fieldText>Benefit Status</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                </fields>
                <fields>
                    <name>Program</name>
                    <choiceReferences>ProgramChoice</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <elementReference>recordId.Id</elementReference>
                    </defaultValue>
                    <fieldText>Program</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Attendee_Limit</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <numberValue>1.0</numberValue>
                    </defaultValue>
                    <fieldText>Attendee Limit</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                    <validationRule>
                        <errorMessage>&lt;p&gt;Cannot exceed 50 attendees.&lt;/p&gt;</errorMessage>
                        <formulaExpression>{!Attendee_Limit}&lt;=50</formulaExpression>
                    </validationRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>Create_New_Benefit_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>WorkTypeDetails</name>
                    <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;strong style=&quot;font-size: 20px; background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Work Type &amp;amp; Group&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>Duration_Type</name>
                    <choiceReferences>DurationTypeOptions</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Duration Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Duration_of_Appointment</name>
                    <dataType>Number</dataType>
                    <fieldText>Duration of Appointment</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                </fields>
                <fields>
                    <name>Appointment_Category</name>
                    <choiceReferences>AppointmentCategoryChoices</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Appointment Category</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Default_Appointment_Type</name>
                    <choiceReferences>DefaultAppointmentTypeChoices</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Default Appointment Type</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Operating_Hours</name>
                    <choiceReferences>OpperatingHourseChoices</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Operating Hours</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Create Now</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Error</name>
        <label>Error</label>
        <locationX>528</locationX>
        <locationY>674</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ErrorMessage</name>
            <fieldText>&lt;p&gt;Unfortunately, we have hit a technical error. Please confirm all fields have been entered and if the problem persists, contact your Salesforce Administrator so that they can diagnose the issue.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Benefit Created: ID = {!Create_Benefit}&lt;/p&gt;&lt;p&gt;Work Type Created: ID = {!Create_Work_Type}&lt;/p&gt;&lt;p&gt;Work Type Group Created: ID = {!Create_Work_Type_Group_Member}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>End</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Success_0</name>
        <label>Success</label>
        <locationX>176</locationX>
        <locationY>1622</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>Completed_0</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Confirmation!&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Benefit - Created&lt;/li&gt;&lt;li&gt;Work Type - Created&lt;/li&gt;&lt;li&gt;Work Type Group - Created&lt;/li&gt;&lt;li&gt;Work Type Group Member  - Created&lt;/li&gt;&lt;li&gt;Service Resource - Added&lt;/li&gt;&lt;li&gt;Territory - Added&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;You are all set to begin setting up a Schedule for this Service Resource.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Once a Session is created (from a Schedule), another Flow will launch to pull these details for each Shift. Shifts will be used to schedule clients who are assigned to this benefit (eligible).&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Create_New_Benefit</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Program</objectType>
    </variables>
</Flow>
